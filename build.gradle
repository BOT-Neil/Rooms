plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
}
group = 'tel.endho'
version = '1.0-SNAPSHOT'
repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = "EngineHub"
        url = uri("https://maven.enginehub.org/repo/")
    }
    maven {
        name = "opencollab-snapshot"
        url = uri("https://repo.opencollab.dev/maven-snapshots/")
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    //maven { url "https://repo.codemc.org/repository/maven-public/" }
}
configurations {
    provided
    compile.extendsFrom provided
}
dependencies {
    //compileOnly(files("libs/FastAsyncWorldEdit-Bukkit-1.17-365.jar"))
    //compileOnly(files("libs/PlotSquared-Bukkit-6.1.3-SNAPSHOT.jar"))
    compileOnly("com.fastasyncworldedit:FastAsyncWorldEdit-Core:2.0.1")
    compileOnly("com.plotsquared:PlotSquared-Core:6.4.0")
    compileOnly(files("libs/slimeworldmanager-api.jar"))
    compileOnly 'org.spigotmc:spigot-api:1.18-R0.1-SNAPSHOT'
    //compileOnly("com.plotsquared:PlotSquared-Core:6.3.0") // PlotSquared Core API

    compileOnly("org.geysermc.floodgate:api:2.0-SNAPSHOT")
    compileOnly("me.clip:placeholderapi:2.11.1")
    //compileOnly 'world.bentobox:bentobox:1.19.0'
    //compileOnly 'world.bentobox:bskyblock:1.15.2'
    implementation 'io.lettuce:lettuce-core:6.1.6.RELEASE'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }

}
shadowJar {
    from file("${buildDir}/libs/Rooms-1.0-SNAPSHOT.jar")
    //configurations = [project.configurations.compileClasspath]
    //configurations.compileClasspath.dependencies.remove dependencies.implementation(files("libs/slimeworldmanager-api-2.7.0-SNAPSHOT.jar"))
    dependencies {
        include dependency("io.lettuce:lettuce-core:6.1.6.RELEASE")
        //exclude(dependency(files("libs/slimeworldmanager-api-2.7.0-SNAPSHOT.jar")))
        //exclude(dependency('com.grinderwolf:slimeworldmanager-api:2.7.0-SNAPSHOT'))
        exclude(dependency('com.grinderwolf:*:*'))
        exclude(dependency('org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'))
        exclude(dependency('org.geysermc.floodgate:api:2.0-SNAPSHOT'))
        exclude(dependency('com.grinderwolf:slimeworldmanager-api:slimeworldmanager-api-2.7.0-SNAPSHOT'))
    }

    exclude 'com.google'
    exclude 'com.grinderwolf.*'
    exclude 'io.netty'
    exclude 'kotlin'
    exclude 'proguard.*'
    archiveBaseName.set('Rooms-1.0-SNAPSHOT.shadow')
    archiveClassifier.set('')
    archiveVersion.set('')
}
tasks.shadowJar.dependsOn tasks.jar
