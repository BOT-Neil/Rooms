plugins {
    id("com.gradleup.shadow") version "9.1.0"
    id 'java'
}
group = 'tel.endho'
version = '1.0-SNAPSHOT'
repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = "EngineHub"
        url = uri("https://maven.enginehub.org/repo/")
    }
    maven {
      url = 'https://repo.infernalsuite.com/repository/maven-public/'
    }
    maven {
        name = "opencollab-snapshot"
        url = uri("https://repo.opencollab.dev/maven-snapshots/")
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
      url = 'https://repo.rapture.pw/repository/maven-releases/'
    }
    maven {
        url = 'https://nexus.leonardbausenwein.de/repository/maven-public/'
    }
    //maven { url "https://repo.codemc.org/repository/maven-public/" }
}
configurations {
    provided
    compile.extendsFrom provided
}
dependencies {
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'org.apache.commons:commons-text:1.3'
    implementation 'de:cubbossa:Translations'
    implementation 'com.infernalsuite.asp:mysql-loader:4.0.0-SNAPSHOT'
    implementation(platform("com.intellectualsites.bom:bom-newest:1.55"))
    compileOnly("com.intellectualsites.plotsquared:plotsquared-core")
    //compileOnly("com.intellectualsites.plotsquared:plotsquared-bukkit") { isTransitive = false }
    compileOnly("com.fastasyncworldedit:FastAsyncWorldEdit-Core:2.4.3")
    compileOnly("io.papermc.paper:paper-api:1.21.8-R0.1-SNAPSHOT")
    //compileOnly(files("libs/api-1.19.3-R0.1-SNAPSHOT.jar"))
    compileOnly('com.sk89q.worldguard:worldguard-bukkit:7.0.15-SNAPSHOT')
    compileOnly("org.geysermc.floodgate:api:2.0-SNAPSHOT")
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly("com.flowpowered:flow-nbt:2.0.2")
    compileOnly 'com.infernalsuite.asp:api:4.0.0-SNAPSHOT'
    //compileOnly 'world.bentobox:bentobox:1.19.0'
    //compileOnly 'world.bentobox:bskyblock:1.15.2'
    implementation 'io.lettuce:lettuce-core:6.1.6.RELEASE'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }

}
shadowJar {
    from file("${layout.buildDirectory}/libs/Rooms-1.0-SNAPSHOT.jar")
    //configurations = [project.configurations.compileClasspath]
    //configurations.compileClasspath.dependencies.remove dependencies.implementation(files("libs/slimeworldmanager-api-2.7.0-SNAPSHOT.jar"))
    minimize()
    relocate 'de.cubbossa.tinytranslations', 'tel.endho.libs.translations'
    dependencies {
        include dependency("io.lettuce:lettuce-core:6.1.6.RELEASE")
        //exclude(dependency(files("libs/slimeworldmanager-api-2.7.0-SNAPSHOT.jar")))
        //exclude(dependency('com.grinderwolf:slimeworldmanager-api:2.7.0-SNAPSHOT'))
        exclude(dependency('com.grinderwolf:*:*'))
        exclude(dependency('org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'))
        exclude(dependency('org.geysermc.floodgate:api:2.0-SNAPSHOT'))
        exclude(dependency('com.grinderwolf:slimeworldmanager-api:slimeworldmanager-api-2.7.0-SNAPSHOT'))
    }

    exclude 'com.google'
    exclude 'com.grinderwolf.*'
    exclude 'io.netty'
    exclude 'kotlin'
    exclude 'proguard.*'
    archiveBaseName.set('Rooms-1.0-SNAPSHOT.shadow')
    archiveClassifier.set('')
    archiveVersion.set('')
}
tasks.shadowJar.dependsOn tasks.jar
